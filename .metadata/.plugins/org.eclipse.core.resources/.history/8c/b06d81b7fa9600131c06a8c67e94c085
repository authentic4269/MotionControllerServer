package main;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

import com.sun.corba.se.impl.orbutil.concurrent.Mutex;

public class EventHandler extends Thread {
	public Lock appStrip;
	public Condition open;
	private Mouse mouse;
	public Mutex closeStrip;
	boolean displayUp;  
	
	//determine how to solve AWTExceptions 
	public EventHandler(Mouse mouse) throws AWTException{
		appStrip = new ReentrantLock();
		open = appStrip.newCondition();
		closeStrip = new Mutex();
		displayUp = false;
		this.mouse = mouse;
		start();
	}
	public void run(){
		
		while(true){
			try {
				appStrip.lock();
				open.wait();
				appStrip.unlock();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			mouse.showAppStrip();
			displayUp = true;
			while(displayUp){
				selectApp();
				try {
					sleep(500);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			mouse.hideAppStrip();
		}
	}
	
	public void selectApp(){
		try {
			PhoneRemote.mutex_orientation.acquire();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		
		mouse.navigateToApp(PhoneRemote.orientation[1]);
		PhoneRemote.mutex_orientation.release();
		
		
}
	
	
}
}
